{"ast":null,"code":"import _objectSpread from \"/home/ouspg/Documents/FullstackOpen2019/puhkirja/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ouspg/Documents/FullstackOpen2019/puhkirja/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ouspg/Documents/FullstackOpen2019/puhkirja/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport PersonForm from './components/personForm';\nimport Filter from './components/filter';\nimport ShowPersons from './components/showPerson';\nimport personsServices from './services/persons';\nimport './styles/App.css';\nimport Notification from './components/notification';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newPhone = _useState6[0],\n        setNewPhone = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        filter = _useState8[0],\n        setFilter = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newFilter = _useState10[0],\n        setNewFilter = _useState10[1];\n\n  const _useState11 = useState({\n    message: null,\n    type: null\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        notif = _useState12[0],\n        setNotif = _useState12[1];\n\n  useEffect(() => {\n    personsServices.getAll().then(persons => {\n      setPersons(persons);\n    });\n  }, []);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneChange = event => {\n    setNewPhone(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const newFilt = event => {\n    event.preventDefault();\n    setFilter(newFilter);\n    setNewFilter('');\n  };\n\n  const newPerson = event => {\n    event.preventDefault();\n\n    if (persons.findIndex(person => person.name.toLowerCase() === newName.toLowerCase()) > -1) {\n      if (window.confirm(\"nimell\\xE4  \".concat(newName, \" jo k\\xE4yt\\xF6ss\\xE4 numero, haluatko korvata sen?\"))) {\n        const id = persons.find(person => person.name.toLowerCase() === newName.toLowerCase()).id;\n        const personObject = {\n          name: newName,\n          number: newPhone\n        };\n        personsServices.update(id, personObject).catch(error => {\n          const newNotif = {\n            message: 'päivitys epäonnistui, päivitä sivu uudelleen',\n            type: 'error'\n          };\n          setNotif(newNotif);\n          setTimeout(() => setNotif(_objectSpread({}, notif, {\n            message: null\n          })), 5000);\n        });\n        setPersons(persons.concat(personObject));\n        const notifState = {\n          message: 'päivitys onnistui',\n          type: 'note'\n        };\n        personsServices.getAll().then(persons => {\n          setPersons(persons);\n        });\n        setNotif(notifState);\n        setTimeout(() => {\n          setNotif(_objectSpread({}, notif, {\n            message: null\n          }));\n        }, 5000);\n      }\n    } else {\n      const personObject = {\n        name: newName,\n        number: newPhone\n      };\n      const newNotif = {\n        message: \"Henkil\\xF6 \".concat(personObject.name, \" lis\\xE4tty\"),\n        type: 'note'\n      };\n      setNotif(newNotif);\n      setTimeout(() => setNotif(_objectSpread({}, notif, {\n        message: null\n      })), 5000);\n      personsServices.create(personObject).then(personsServices.getAll().then(persons => {\n        setPersons(persons);\n      })).catch(error => {\n        const newNotif = {\n          message: 'lisääminen epäonnistui',\n          type: 'error'\n        };\n        setNotif(newNotif);\n        setTimeout(() => {\n          setNotif(_objectSpread({}, notif, {\n            message: null\n          }));\n        }, 5000);\n      });\n      setNewName('');\n      setNewPhone('');\n    }\n  };\n\n  const deletePerson = event => {\n    let id = event.target.value;\n    let deletedPerson = persons.find(person => person.id == id);\n    console.log(deletedPerson);\n\n    if (window.confirm(\"poistetaanko\")) {\n      personsServices.deletePerson(id).catch(error => {\n        const newNotif = {\n          message: 'poistaminen epäonnistui, päivitä sivu tai yritä uudestaan',\n          type: 'error'\n        };\n        setNotif(newNotif);\n        setTimeout(() => {\n          setNotif(_objectSpread({}, notif, {\n            message: null\n          }));\n        }, 5000);\n      });\n      const newPersons = persons.filter(person => person.id != id);\n      setPersons(newPersons);\n      const newNotif = {\n        message: \"henkil\\xF6  poistettu\",\n        type: 'note'\n      };\n      setNotif(newNotif);\n      setTimeout(() => {\n        setNotif(_objectSpread({}, notif, {\n          message: null\n        }));\n      }, 5000);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Puhelinluettelo\"), React.createElement(Notification, {\n    notif: notif,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    submit: newFilt,\n    filter: newFilter,\n    filterChange: handleFilterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"----------------------------\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Lis\\xE4\\xE4 uusi\"), React.createElement(PersonForm, {\n    submit: newPerson,\n    name: newName,\n    nameChange: handleNameChange,\n    phone: newPhone,\n    phoneChange: handlePhoneChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Numerot\"), React.createElement(ShowPersons, {\n    persons: persons,\n    filter: filter,\n    buttonHandler: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ouspg/Documents/FullstackOpen2019/puhkirja/src/App.js"],"names":["React","useState","useEffect","PersonForm","Filter","ShowPersons","personsServices","Notification","App","persons","setPersons","newName","setNewName","newPhone","setNewPhone","filter","setFilter","newFilter","setNewFilter","message","type","notif","setNotif","getAll","then","handleNameChange","event","target","value","handlePhoneChange","handleFilterChange","newFilt","preventDefault","newPerson","findIndex","person","name","toLowerCase","window","confirm","id","find","personObject","number","update","catch","error","newNotif","setTimeout","concat","notifState","create","deletePerson","deletedPerson","console","log","newPersons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport PersonForm from './components/personForm'\nimport Filter from './components/filter'\nimport ShowPersons from './components/showPerson'\nimport personsServices from './services/persons'\nimport './styles/App.css'\nimport Notification from './components/notification'\n\n\nconst App = () => {\n \n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [notif, setNotif] = useState({\n    message: null,\n    type: null,\n  })\n\n  useEffect(()=> {\n    personsServices\n      .getAll()\n      .then(persons => {\n          setPersons(persons)\n      })\n      \n  }  , [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  } \n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  } \n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const newFilt = (event) => {\n    event.preventDefault()\n    setFilter(newFilter)\n    setNewFilter('')\n  }\n\n  const newPerson = (event) => {\n    event.preventDefault()\n    if(persons.findIndex(person => person.name.toLowerCase() === newName.toLowerCase()) > -1){\n        if(window.confirm(`nimellä  ${newName} jo käytössä numero, haluatko korvata sen?`)){\n          const id = persons.find(person => person.name.toLowerCase() === newName.toLowerCase()).id\n          const personObject = {\n            name:  newName,\n            number: newPhone,\n          }\n          personsServices.update(id, personObject).catch(error => {\n            const newNotif = {\n              message: 'päivitys epäonnistui, päivitä sivu uudelleen',\n              type: 'error',\n            }\n            setNotif(newNotif)\n            setTimeout(() => setNotif({...notif, message : null}), 5000)\n          })\n          setPersons(persons.concat(personObject))\n          const notifState = {\n            message: 'päivitys onnistui',\n            type: 'note',\n          }\n            personsServices.getAll().then(persons => {setPersons(persons)})\n            setNotif(notifState)\n            setTimeout(() => {\n\t\t\t\t\t\tsetNotif({...notif, message: null})\n\t\t\t\t\t\t}, 5000)\n        } \n      \n    }else{\n      \n      const personObject = {\n      name: newName,\n      number: newPhone,\n      }\n      const newNotif = {\n        message: `Henkilö ${personObject.name} lisätty`,\n        type: 'note'\n      }\n      setNotif(newNotif)\n      setTimeout(() => setNotif({...notif, message:null}), 5000)  \n    personsServices.create(personObject).then(personsServices.getAll().then(persons => {setPersons(persons)}))\n    .catch(error => {\n      const newNotif = {\n        message: 'lisääminen epäonnistui',\n        type: 'error',\n      }\n      setNotif(newNotif)\n      setTimeout(() => {\n        setNotif({...notif, message:null})\n      }, 5000)\n    })\n    setNewName('')\n    setNewPhone('')\n\n    }\n}\n\nconst deletePerson = (event) => {\n  let id = event.target.value\n  let deletedPerson = persons.find(person => person.id == id)\n  console.log(deletedPerson)\n\n  if(window.confirm(`poistetaanko`)){\n    personsServices.deletePerson(id).catch(error => {\n      const newNotif = {\n        message: 'poistaminen epäonnistui, päivitä sivu tai yritä uudestaan',\n        type: 'error',\n      }\n      setNotif(newNotif)\n      setTimeout(() => {\n        setNotif({...notif, message:null})\n      }, 5000)\n    })\n    const newPersons = persons.filter(person => person.id != id)\n    setPersons(newPersons)\n    const newNotif = {\n      message: `henkilö  poistettu`,\n      type: 'note',\n    }\n    setNotif(newNotif)\n    setTimeout(() => {setNotif({...notif, message:null})\n    }, 5000)\n\n  }\n}\n\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Notification notif={notif}/>\n      <Filter\n        submit={newFilt}\n        filter={newFilter}\n        filterChange={handleFilterChange}\n      />\n      <p>----------------------------</p>\n      <h2>Lisää uusi</h2>\n\t\t\t<PersonForm\n\t\t\t\tsubmit={newPerson}\n\t\t\t\tname={newName}\n\t\t\t\tnameChange={handleNameChange}\n\t\t\t\tphone={newPhone}\n\t\t\t\tphoneChange={handlePhoneChange}\n\t\t\t/>\n      <h2>Numerot</h2>\n      <ShowPersons\n        persons={persons}\n        filter={filter}\n        buttonHandler={deletePerson}\n      />\n      \n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}