{"version":3,"sources":["components/personForm.js","components/filter.js","components/listPeople.js","components/showPerson.js","services/persons.js","components/notification.js","App.js","serviceWorker.js","index.js"],"names":["PersonForm","_ref","submit","name","phone","nameChange","phoneChange","react_default","a","createElement","onSubmit","value","onChange","type","Filter","filter","filterChange","ListPeople","persons","buttonHandler","map","person","key","id","number","onClick","ShowPersons","showPeople","toLowerCase","includes","console","log","listPeople","baseUrl","services_persons","axios","get","then","response","data","newObject","post","put","concat","delete","Notification","notif","message","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","notifStyle","Object","objectSpread","color","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newPhone","setNewPhone","_useState7","_useState8","setFilter","_useState9","_useState10","newFilter","setNewFilter","_useState11","_useState12","setNotif","useEffect","personsServices","notification","components_filter","event","preventDefault","target","personForm","findIndex","window","confirm","find","p","personObject","newPerson","newState","setTimeout","newPersons","catch","error","newNotif","showPerson","deletedPerson","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3eb5040.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonForm = ({submit, name , phone, nameChange, phoneChange}) => {\n    return(\n      <form onSubmit={submit}>\n        <div>\n          nimi:\n          <input \n          value={name}\n          onChange={nameChange}\n          />\n        </div>\n        <div>\n          puh:\n          <input\n          value={phone}\n          onChange={phoneChange}\n          ></input>\n        </div>\n        <div>\n          <button type ='submit'> Lisää </button>\n        </div>\n      </form>\n    )\n  }\n  export default PersonForm","import React from 'react'\n\nconst Filter = ({submit, filter, filterChange}) => {\n    return (\n      <form onSubmit = {submit}>\n        <div>\n          search:\n          <input\n            value={filter}\n            onChange={filterChange}\n          />\n        </div>\n        <div>\n          <button type='submit'>rajaa</button>\n        </div>\n      </form>\n    )\n  \n  }\nexport default Filter  ","import React from 'react'\n\nconst ListPeople = ({persons, buttonHandler}) => {\n    const PersonList = persons.map(person => <li key={person.id}>{person.name} {person.number} <button onClick={buttonHandler} value={person.id}>Poista</button> </li>)\n    return(\n        PersonList\n    )\n}\n\nexport default ListPeople","import React from 'react'\nimport ListPeople from './listPeople'\n\nconst ShowPersons= ({persons, filter, buttonHandler}) =>{\n    let showPeople = persons\n    if ( filter ){\n      showPeople = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n      console.log(showPeople, filter)\n    }\n\n    return(\n      <ListPeople persons={showPeople}\n       buttonHandler={buttonHandler}/>\n    )\n  }\n  \n  \n  export default ShowPersons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const deletePerson = id => {\n      const request = axios.delete(`${baseUrl}/${id}`)\n      return request.then(response => response.data)\n  }\nexport default {getAll,create,update,deletePerson}","import React from 'react'\n\nconst Notification = ({notif}) => {\n    const message = notif.message\n    const type = notif.type\n    if (message === null){\n      return null\n    }\n    const style = {\n          background: 'lightgrey',\n          fontSize: '20px',\n          borderStyle: 'solid',\n          borderRadius: '5px',\n          padding: '10px',\n          marginBottom: '10px'\n    }\n    let notifStyle = null;\n    if (type === 'note'){\n      notifStyle = {...style, color : 'green'}\n    }\n    else{\n      notifStyle = {...style, color: 'red'}\n    }\n  \n    return(\n      <div style ={notifStyle}>\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect} from 'react'\nimport PersonForm from './components/personForm'\nimport Filter from './components/filter'\nimport ShowPersons from './components/showPerson'\nimport personsServices from './services/persons'\nimport './styles/App.css'\nimport Notification from './components/notification'\n\n\nconst App = () => {\n \n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [notif, setNotif] = useState({\n    message: null,\n    type: null,\n  })\n\n  useEffect(()=> {\n    personsServices\n      .getAll()\n      .then(persons => {\n          setPersons(persons)\n      })\n      \n  }  , [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  } \n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  } \n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const newFilt = (event) => {\n    event.preventDefault()\n    setFilter(newFilter)\n    setNewFilter('')\n  }\n\n  const newPerson = (event) => {\n    event.preventDefault()\n      \n      if (persons.findIndex(person => person.name === newName) > -1) {\n        if (window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n          const id = persons.find(p => p.name === newName).id\n          const personObject = {\n            name: newName,\n            number: newPhone,\n          }\n          personsServices\n            .update(id, personObject)\n            .then(newPerson => {\n              const newState = {\n                message: `Henkilön ${newPerson.name} numero korvattu uudella`,\n                type: 'note'\n              }\n              setNotif(newState)\n              setTimeout(() => {\n                setNotif({...notif, message: null})\n              }, 5000)\n  \n              const newPersons = persons.map(person => person.id !== id ? person : newPerson)\n              setPersons(newPersons)\n          })\n          .catch(error => {\n            const newState = {\n              message: `Henkilö ${personObject.name} on jo poistettu tietokannasta`,\n              type: 'error'\n            }\n            setNotif(newState)\n            setTimeout(() => {\n              setNotif({...notif, message: null})\n            }, 5000)\n  \n            setPersons(persons.filter(p => p.id !== id))\n          })\n        }\n      }else{\n      \n      const personObject = {\n      name: newName,\n      number: newPhone,\n      }\n      const newNotif = {\n        message: `Henkilö ${personObject.name} lisätty`,\n        type: 'note'\n      }\n      setNotif(newNotif)\n      setTimeout(() => setNotif({...notif, message:null}), 5000)  \n    personsServices.create(personObject).then(personsServices.getAll().then(persons => {setPersons(persons)}))\n    .catch(error => {\n      const newNotif = {\n        message: 'lisääminen epäonnistui',\n        type: 'error',\n      }\n      setNotif(newNotif)\n      setTimeout(() => {\n        setNotif({...notif, message:null})\n      }, 5000)\n    })\n    setNewName('')\n    setNewPhone('')\n\n    }\n}\n\nconst deletePerson = (event) => {\n  let id = event.target.value\n  let deletedPerson = persons.find(person => person.id == id)\n  console.log(deletedPerson)\n\n  if(window.confirm(`poistetaanko`)){\n    personsServices.deletePerson(id).catch(error => {\n      const newNotif = {\n        message: 'poistaminen epäonnistui, päivitä sivu tai yritä uudestaan',\n        type: 'error',\n      }\n      setNotif(newNotif)\n      setTimeout(() => {\n        setNotif({...notif, message:null})\n      }, 5000)\n    })\n    const newPersons = persons.filter(person => person.id != id)\n    setPersons(newPersons)\n    const newNotif = {\n      message: `henkilö  poistettu`,\n      type: 'note',\n    }\n    setNotif(newNotif)\n    setTimeout(() => {setNotif({...notif, message:null})\n    }, 5000)\n\n  }\n}\n\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n\n      <Notification notif={notif}/>\n      <Filter\n        submit={newFilt}\n        filter={newFilter}\n        filterChange={handleFilterChange}\n      />\n      <p>----------------------------</p>\n      <h2>Lisää uusi</h2>\n\t\t\t<PersonForm\n\t\t\t\tsubmit={newPerson}\n\t\t\t\tname={newName}\n\t\t\t\tnameChange={handleNameChange}\n\t\t\t\tphone={newPhone}\n\t\t\t\tphoneChange={handlePhoneChange}\n\t\t\t/>\n      <h2>Numerot</h2>\n      <ShowPersons\n        persons={persons}\n        filter={filter}\n        buttonHandler={deletePerson}\n      />\n      \n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}